@inject NavigationManager NavMan
@inject Blazored.LocalStorage.ILocalStorageService localStorage 


@inherits LayoutComponentBase
@using Shared.Forms
@using Shared.Models

<div class="page">
    <div style="background-image: none" class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            <!-- If not logged in (CURR_USER = null), then load create account and login buttons -->
            <!-- Else, welcome the current user and give them the option to log out -->
            <!-- Updating this requires refreshing the page, hence the use of NavigationManager in Shared.Forms.LogoutButton, etc. -->
            <ul class="header">
                @if (curr_user == null)
                {
                    <li class="headitem">
                        <Go.Shared.Forms.CreateAccountForm />
                    </li>
                    <li class="headitem">
                        <Go.Shared.Forms.LoginForm />
                    </li>


                }
                else
                {
                    <li class="headitem" style="font-size:24px">Welcome, @(curr_user.name)! </li>
                    <li class="headitem">
                        <Go.Shared.Forms.LogoutButton />
                    </li>
                }
            </ul>
</div>


        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

@code {
    IUser curr_user;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        curr_user = await Globals.GetUser(localStorage);
        StateHasChanged();
    }
}
