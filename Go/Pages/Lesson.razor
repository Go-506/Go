@page "/lesson/{lesson_name}"
@using Blazor.Extensions
@using Blazor.Extensions.Canvas
@using Blazor.Extensions.Canvas.Canvas2D
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Shared.Models
@using System.Collections;
@using Shared.Models.MongoDB;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IJSRuntime jsRuntime


<h3>Lesson: @lesson_name</h3>
<div>@(currPage.text) </div>


<div style="display: flex; justify-content: center; align-items: center; height: auto;">
    <button type="button" @onclick="async () => await Back()" hidden=@(currIndex==0)>&lt;</button>&nbsp;
    <button type="button" @onclick="async () => await Forward()" hidden=@(currIndex==lesson.lessonPages.Count-1)>&gt;</button>
</div>

@code {
    [Parameter]
    public String lesson_name { get; set; }
    private Shared.Models.Lesson lesson;
    private Shared.Models.LessonPage currPage;
    private int currIndex;

    protected override async Task OnInitializedAsync()
    {
        lesson = LessonDBInterface.GetLesson(lesson_name);
        Console.WriteLine(lesson.name);
        Console.WriteLine(lesson.lessonPages);
        currPage = lesson.lessonPages.ElementAt<LessonPage>(0);
        currIndex = 0;
    }

    private async Task Forward()
    {
        if (currIndex < lesson.lessonPages.Count-1)
        {
            currIndex++;
            currPage = lesson.lessonPages.ElementAt(currIndex);
        }
    }

    private async Task Back()
    {
        if (currIndex > 0)
        {
            currIndex--;
            currPage = lesson.lessonPages.ElementAt(currIndex);
        }
    }
}